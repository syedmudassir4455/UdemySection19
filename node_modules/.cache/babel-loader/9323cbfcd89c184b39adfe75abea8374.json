{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-http-18358-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!response.ok) {\n        throw new Error(\"could not fetch cart Data!.\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData(); //   dispatch(cartActions.replaceCart(cartData)); //you get an error if the cart is empty so, we are replacing \n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Fetch cart data failed\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-18358-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        //   body: JSON.stringify(cart), instead of giving whole cart we only pass speciic data\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Send cart data successfully\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sending cart data failed\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/home/syed/UdemySection19/01-starting-project/src/store/cart-action.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","items","totalQuantity"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,aAAOD,IAAP;AACD,KATD;;AAUA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC,CADE,CAEJ;AAEC,KAJD,CAIE,OAAOQ,KAAP,EAAc;AACdT,MAAAA,QAAQ,CACNH,SAAS,CAACa,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,OAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOf,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNH,SAAS,CAACa,gBAAV,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMd,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEc,QAAAA,MAAM,EAAE,KADV;AAEE;AACAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KADO;AAEnBC,UAAAA,aAAa,EAAEP,IAAI,CAACO;AAFD,SAAf;AAHR,OAF0B,CAA5B;;AAWA,UAAI,CAACpB,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;AACF,KAfD;;AAiBA,QAAI;AACF,YAAMW,WAAW,EAAjB;AACAhB,MAAAA,QAAQ,CACNH,SAAS,CAACa,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,SAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KATD,CASE,OAAOJ,KAAP,EAAc;AACdT,MAAAA,QAAQ,CACNH,SAAS,CAACa,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,OAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA5CD;AA6CD,CA9CM","sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://react-http-18358-default-rtdb.firebaseio.com/cart.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"could not fetch cart Data!.\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n    //   dispatch(cartActions.replaceCart(cartData)); //you get an error if the cart is empty so, we are replacing \n    \n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Fetch cart data failed\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-http-18358-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          //   body: JSON.stringify(cart), instead of giving whole cart we only pass speciic data\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success\",\n          message: \"Send cart data successfully\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Sending cart data failed\",\n        })\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}