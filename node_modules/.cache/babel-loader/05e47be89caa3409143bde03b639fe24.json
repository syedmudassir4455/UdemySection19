{"ast":null,"code":"var _jsxFileName = \"/home/syed/UdemySection19/01-starting-project/src/components/Shop/ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const {\n    title,\n    price,\n    description,\n    id\n  } = props; // const addCartHandler =() =>{\n  //   dispatch(cartActions.addItemToCart({\n  //     id,\n  //     title,\n  //     price,\n  //     description\n  //   }))\n  // }\n\n  const addToCartHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n  };\n\n  const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n\n  const existingItem = updatedItems.find(item => item.id === id);\n\n  if (existingItem) {\n    const updatedItem = { ...existingItem\n    }; // new object + copy existing properties to avoid state mutation\n\n    updatedItem.quantity++;\n    updatedItem.totalPrice = updatedItem.totalPrice + price;\n    const existingItemIndex = updatedItems.findIndex(item => item.id === id);\n    updatedItems[existingItemIndex] = updatedItem;\n  } else {\n    updatedItems.push({\n      id: id,\n      price: price,\n      quantity: 1,\n      totalPrice: price,\n      nmae: title\n    });\n  } // const addToCartHandler = () => {\n  //   const newTotalQuantity = cart.totalQuantity + 1;\n  //   const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n  //   const existingItem = updatedItems.find((item) => item.id === id);\n  //   if (existingItem) {\n  //     const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n  //     updatedItem.quantity++;\n  //     updatedItem.totalPrice = updatedItem.totalPrice + price;\n  //     const existingItemIndex = updatedItems.findIndex(\n  //       (item) => item.id === id\n  //     );\n  //     updatedItems[existingItemIndex] = updatedItem;\n  //   } else {\n  //     updatedItems.push({\n  //       id: id,\n  //       price: price,\n  //       quantity: 1,\n  //       totalPrice: price,\n  //       name: title,\n  //     });\n  //   }\n\n\n  const newCart = {\n    totalQuantity: newTotalQuantity,\n    items: updatedItems\n  }; // dispatch(cartActions.replaceCart(newCart))\n  // const newCart = {\n  //   totalQuantity: newTotalQuantity,\n  //   items: updatedItems,\n  // };\n\n  dispatch(cartActions.replaceCart(newCart));\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCartHandler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["/home/syed/UdemySection19/01-starting-project/src/components/Shop/ProductItem.js"],"names":["useDispatch","useSelector","Card","classes","cartActions","ProductItem","props","cart","state","dispatch","title","price","description","id","addToCartHandler","newTotalQuantity","totalQuantity","updatedItems","items","slice","existingItem","find","item","updatedItem","quantity","totalPrice","existingItemIndex","findIndex","push","nmae","newCart","replaceCart","toFixed","actions"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = (props) => {\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n\n  // const addCartHandler =() =>{\n  //   dispatch(cartActions.addItemToCart({\n  //     id,\n  //     title,\n  //     price,\n  //     description\n  //   }))\n  // }\n\n  const addToCartHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n  };\n\n  const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n  const existingItem = updatedItems.find((item) => item.id === id);\n  if (existingItem) {\n    const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n    updatedItem.quantity++;\n    updatedItem.totalPrice = updatedItem.totalPrice + price;\n    const existingItemIndex = updatedItems.findIndex((item) => item.id === id);\n    updatedItems[existingItemIndex] = updatedItem;\n  } else {\n    updatedItems.push({\n      id: id,\n      price: price,\n      quantity: 1,\n      totalPrice: price,\n      nmae: title,\n    });\n  }\n\n\n  // const addToCartHandler = () => {\n  //   const newTotalQuantity = cart.totalQuantity + 1;\n\n  //   const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n  //   const existingItem = updatedItems.find((item) => item.id === id);\n  //   if (existingItem) {\n  //     const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n  //     updatedItem.quantity++;\n  //     updatedItem.totalPrice = updatedItem.totalPrice + price;\n  //     const existingItemIndex = updatedItems.findIndex(\n  //       (item) => item.id === id\n  //     );\n  //     updatedItems[existingItemIndex] = updatedItem;\n  //   } else {\n  //     updatedItems.push({\n  //       id: id,\n  //       price: price,\n  //       quantity: 1,\n  //       totalPrice: price,\n  //       name: title,\n  //     });\n  //   }\n\n  const newCart = {\n    totalQuantity: newTotalQuantity,\n    items: updatedItems,\n  };\n\n  // dispatch(cartActions.replaceCart(newCart))\n\n\n  // const newCart = {\n  //   totalQuantity: newTotalQuantity,\n  //   items: updatedItems,\n  // };\n\n  dispatch(cartActions.replaceCart(newCart));\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler }>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}