{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification); //   useEffect(() => {\n  //     const sendCartData = async () => {\n  //       dispatch(\n  //         uiActions.showNotification({\n  //           status: \"Pending\",\n  //           title: \"Sending...\",\n  //           message: \"Sending Cart Data\",\n  //         })\n  //       );\n  //       const response = await fetch(\n  //         \"https://react-http-18358-default-rtdb.firebaseio.com/cart.json\",\n  //         {\n  //           method: \"PUT\",\n  //           body: JSON.stringify(cart),\n  //         }\n  //       );\n  //     \n  //       if (!response.Ok) {\n  //         throw new Error(\"Sending cart data failed.\");\n} //         // dispatch(uiActions.showNotification({\n//         //   status: \"Error\",\n//         //   title: \"Error\",\n//         //   message: \"Seding cart data failed\",\n//         //  }))\n//       }\n//       // const responseData = await response.json();\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"Success\",\n//           title: \"Success...\",\n//           message: \"Send cart data successfully\",\n//         })\n//       );\n//     };\n//     if (isInitial) {\n//       isInitial = false;\n//       return;\n//     }\n//     sendCartData().catch((error) => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"Error\",\n//           title: \"Error\",\n//           message: \"Seding cart data failed\",\n//         })\n//       );\n//     });\n//   }, [cart, dispatch]);\n//   return (\n//     <Fragment>\n//       {notification && (\n//         <Notification\n//           status={notification.status}\n//           title={notification.title}\n//           message={notification.message}\n//         />\n//       )}\n//       <Layout>\n//         {showCart && <Cart />}\n//         <Products />\n//       </Layout>\n//     </Fragment>\n//   );\n// }\n// export default App;\n// import { Fragment, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import Cart from './components/Cart/Cart';\n// import Layout from './components/Layout/Layout';\n// import Products from './components/Shop/Products';\n// import { uiActions } from './store/ui-slice';\n// import Notification from './components/UI/Notification';\n// let isInitial = true;\n// function App() {\n//   const dispatch = useDispatch();\n//   const showCart = useSelector((state) => state.ui.cartIsVisible);\n//   const cart = useSelector((state) => state.cart);\n//   const notification = useSelector((state) => state.ui.notification);\n//   useEffect(() => {\n//     const sendCartData = async () => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: 'pending',\n//           title: 'Sending...',\n//           message: 'Sending cart data!',\n//         })\n//       );\n//       const response = await fetch(\n//         'https://react-http-18358-default-rtdb.firebaseio.com/cart.json',\n//         {\n//           method: 'PUT',\n//           body: JSON.stringify(cart),\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error('Sending cart data failed.');\n//       }\n//       dispatch(\n//         uiActions.showNotification({\n//           status: 'success',\n//           title: 'Success!',\n//           message: 'Sent cart data successfully!',\n//         })\n//       );\n//     };\n//     if (isInitial) {\n//       isInitial = false;\n//       return;\n//     }\n//     sendCartData().catch((error) => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: 'error',\n//           title: 'Error!',\n//           message: 'Sending cart data failed!',\n//         })\n//       );\n//     });\n//   }, [cart, dispatch]);\n//   return (\n//     <Fragment>\n//       {notification && (\n//         <Notification\n//           status={notification.status}\n//           title={notification.title}\n//           message={notification.message}\n//         />\n//       )}\n//       <Layout>\n//         {showCart && <Cart />}\n//         <Products />\n//       </Layout>\n//     </Fragment>\n//   );\n// }\n// export default App;\n\n\n_s(App, \"FjbzMb+2u5sIiL9hITUjX/d+XVA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/syed/UdemySection19/01-starting-project/src/App.js"],"names":["Fragment","useEffect","useSelector","useDispatch","Cart","Layout","Products","uiActions","Notification","isInitial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,aAArB,CAA5B;AACA,QAAMC,IAAI,GAAGd,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;AACA,QAAMC,YAAY,GAAGf,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASG,YAArB,CAAhC,CAJa,CAMf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;GA/JSP,G;UACUP,W,EACAD,W,EACJA,W,EACQA,W;;;KAJdQ,G","sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\n\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\n\nlet isInitial = true;\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n//   useEffect(() => {\n//     const sendCartData = async () => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"Pending\",\n//           title: \"Sending...\",\n//           message: \"Sending Cart Data\",\n//         })\n//       );\n//       const response = await fetch(\n//         \"https://react-http-18358-default-rtdb.firebaseio.com/cart.json\",\n//         {\n//           method: \"PUT\",\n//           body: JSON.stringify(cart),\n//         }\n//       );\n//     \n//       if (!response.Ok) {\n//         throw new Error(\"Sending cart data failed.\");\n}\n\n//         // dispatch(uiActions.showNotification({\n//         //   status: \"Error\",\n//         //   title: \"Error\",\n//         //   message: \"Seding cart data failed\",\n//         //  }))\n//       }\n//       // const responseData = await response.json();\n\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"Success\",\n//           title: \"Success...\",\n//           message: \"Send cart data successfully\",\n//         })\n//       );\n//     };\n\n//     if (isInitial) {\n//       isInitial = false;\n//       return;\n//     }\n\n//     sendCartData().catch((error) => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"Error\",\n//           title: \"Error\",\n//           message: \"Seding cart data failed\",\n//         })\n//       );\n//     });\n//   }, [cart, dispatch]);\n\n//   return (\n//     <Fragment>\n//       {notification && (\n//         <Notification\n//           status={notification.status}\n//           title={notification.title}\n//           message={notification.message}\n//         />\n//       )}\n//       <Layout>\n//         {showCart && <Cart />}\n//         <Products />\n//       </Layout>\n//     </Fragment>\n//   );\n// }\n\n// export default App;\n\n// import { Fragment, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n\n// import Cart from './components/Cart/Cart';\n// import Layout from './components/Layout/Layout';\n// import Products from './components/Shop/Products';\n// import { uiActions } from './store/ui-slice';\n// import Notification from './components/UI/Notification';\n\n// let isInitial = true;\n\n// function App() {\n//   const dispatch = useDispatch();\n//   const showCart = useSelector((state) => state.ui.cartIsVisible);\n//   const cart = useSelector((state) => state.cart);\n//   const notification = useSelector((state) => state.ui.notification);\n\n//   useEffect(() => {\n//     const sendCartData = async () => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: 'pending',\n//           title: 'Sending...',\n//           message: 'Sending cart data!',\n//         })\n//       );\n//       const response = await fetch(\n//         'https://react-http-18358-default-rtdb.firebaseio.com/cart.json',\n//         {\n//           method: 'PUT',\n//           body: JSON.stringify(cart),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error('Sending cart data failed.');\n//       }\n\n//       dispatch(\n//         uiActions.showNotification({\n//           status: 'success',\n//           title: 'Success!',\n//           message: 'Sent cart data successfully!',\n//         })\n//       );\n//     };\n\n//     if (isInitial) {\n//       isInitial = false;\n//       return;\n//     }\n\n//     sendCartData().catch((error) => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: 'error',\n//           title: 'Error!',\n//           message: 'Sending cart data failed!',\n//         })\n//       );\n//     });\n//   }, [cart, dispatch]);\n\n//   return (\n//     <Fragment>\n//       {notification && (\n//         <Notification\n//           status={notification.status}\n//           title={notification.title}\n//           message={notification.message}\n//         />\n//       )}\n//       <Layout>\n//         {showCart && <Cart />}\n//         <Products />\n//       </Layout>\n//     </Fragment>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}